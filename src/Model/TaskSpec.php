<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Docker\API\Model;

class TaskSpec
{
    /**
     * @var TaskSpecContainerSpec
     */
    protected $containerSpec;
    /**
     * @var TaskSpecResources
     */
    protected $resources;
    /**
     * @var TaskSpecRestartPolicy
     */
    protected $restartPolicy;
    /**
     * @var TaskSpecPlacement
     */
    protected $placement;
    /**
     * @var int
     */
    protected $forceUpdate;
    /**
     * @var TaskSpecNetworksItem[]
     */
    protected $networks;
    /**
     * @var TaskSpecLogDriver
     */
    protected $logDriver;

    /**
     * @return TaskSpecContainerSpec
     */
    public function getContainerSpec(): ?TaskSpecContainerSpec
    {
        return $this->containerSpec;
    }

    /**
     * @param TaskSpecContainerSpec $containerSpec
     *
     * @return self
     */
    public function setContainerSpec(?TaskSpecContainerSpec $containerSpec): self
    {
        $this->containerSpec = $containerSpec;

        return $this;
    }

    /**
     * @return TaskSpecResources
     */
    public function getResources(): ?TaskSpecResources
    {
        return $this->resources;
    }

    /**
     * @param TaskSpecResources $resources
     *
     * @return self
     */
    public function setResources(?TaskSpecResources $resources): self
    {
        $this->resources = $resources;

        return $this;
    }

    /**
     * @return TaskSpecRestartPolicy
     */
    public function getRestartPolicy(): ?TaskSpecRestartPolicy
    {
        return $this->restartPolicy;
    }

    /**
     * @param TaskSpecRestartPolicy $restartPolicy
     *
     * @return self
     */
    public function setRestartPolicy(?TaskSpecRestartPolicy $restartPolicy): self
    {
        $this->restartPolicy = $restartPolicy;

        return $this;
    }

    /**
     * @return TaskSpecPlacement
     */
    public function getPlacement(): ?TaskSpecPlacement
    {
        return $this->placement;
    }

    /**
     * @param TaskSpecPlacement $placement
     *
     * @return self
     */
    public function setPlacement(?TaskSpecPlacement $placement): self
    {
        $this->placement = $placement;

        return $this;
    }

    /**
     * @return int
     */
    public function getForceUpdate(): ?int
    {
        return $this->forceUpdate;
    }

    /**
     * @param int $forceUpdate
     *
     * @return self
     */
    public function setForceUpdate(?int $forceUpdate): self
    {
        $this->forceUpdate = $forceUpdate;

        return $this;
    }

    /**
     * @return TaskSpecNetworksItem[]
     */
    public function getNetworks(): ?array
    {
        return $this->networks;
    }

    /**
     * @param TaskSpecNetworksItem[] $networks
     *
     * @return self
     */
    public function setNetworks(?array $networks): self
    {
        $this->networks = $networks;

        return $this;
    }

    /**
     * @return TaskSpecLogDriver
     */
    public function getLogDriver(): ?TaskSpecLogDriver
    {
        return $this->logDriver;
    }

    /**
     * @param TaskSpecLogDriver $logDriver
     *
     * @return self
     */
    public function setLogDriver(?TaskSpecLogDriver $logDriver): self
    {
        $this->logDriver = $logDriver;

        return $this;
    }
}
