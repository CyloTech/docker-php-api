<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Docker\API\Resource;

trait TaskAsyncResourceTrait
{
    /**
     * @param array $queryParameters {
     *
     *     @var string $filters A JSON encoded value of the filters (a `map[string][]string`) to process on the tasks list. Available filters:

     * }
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Docker\API\Exception\TaskListInternalServerErrorException
     * @throws \Docker\API\Exception\TaskListServiceUnavailableException
     *
     * @return null|\Docker\API\Model\Task[]|\Amp\Artax\Response
     */
    public function taskList(array $queryParameters = [], string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Docker\API\Endpoint\TaskList($queryParameters);

        return $this->executeArtaxEndpoint($endpoint, $fetch);
    }

    /**
     * @param string $id    ID of the task
     * @param string $fetch Fetch mode to use (can be OBJECT or RESPONSE)
     *
     * @throws \Docker\API\Exception\TaskInspectNotFoundException
     * @throws \Docker\API\Exception\TaskInspectInternalServerErrorException
     * @throws \Docker\API\Exception\TaskInspectServiceUnavailableException
     *
     * @return null|\Docker\API\Model\Task|\Amp\Artax\Response
     */
    public function taskInspect(string $id, string $fetch = self::FETCH_OBJECT)
    {
        $endpoint = new \Docker\API\Endpoint\TaskInspect($id);

        return $this->executeArtaxEndpoint($endpoint, $fetch);
    }
}
