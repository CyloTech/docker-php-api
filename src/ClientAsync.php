<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Docker\API;

class ClientAsync extends \Jane\OpenApiRuntime\Client\AmpArtaxResource
{
    use Resource\ContainerAsyncResourceTrait;
    use Resource\ImageAsyncResourceTrait;
    use Resource\SystemAsyncResourceTrait;
    use Resource\ExecAsyncResourceTrait;
    use Resource\VolumeAsyncResourceTrait;
    use Resource\NetworkAsyncResourceTrait;
    use Resource\PluginAsyncResourceTrait;
    use Resource\NodeAsyncResourceTrait;
    use Resource\SwarmAsyncResourceTrait;
    use Resource\ServiceAsyncResourceTrait;
    use Resource\TaskAsyncResourceTrait;
    use Resource\DefaultAsyncResourceTrait;
    use Resource\SecretAsyncResourceTrait;
    use Resource\ConfigAsyncResourceTrait;
    use Resource\DistributionAsyncResourceTrait;

    public static function create($httpClient = null)
    {
        if (null === $httpClient) {
            $httpClient = new \Amp\Artax\DefaultClient();
        }
        $serializer = new \Symfony\Component\Serializer\Serializer(\Docker\API\Normalizer\NormalizerFactory::create(), [new \Symfony\Component\Serializer\Encoder\JsonEncoder(new \Symfony\Component\Serializer\Encoder\JsonEncode(), new \Symfony\Component\Serializer\Encoder\JsonDecode())]);

        return new static($httpClient, $serializer);
    }
}
